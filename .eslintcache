[{"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/index.js":"1","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/editor.js":"2","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/App.js":"3","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Loader/loader.js":"4","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/reportWebVitals.js":"5","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/config.js":"6","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Main.js":"7","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Tree/Tree.js":"8","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/graphql/index.js":"9","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/graphql/queries/index.js":"10","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/http.js":"11","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Stems/Stems.js":"12","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Sekeleton.js":"13","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/contexts/MainProvider.js":"14","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/utils.js":"15","/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Read.js":"16"},{"size":931,"mtime":1611913738858,"results":"17","hashOfConfig":"18"},{"size":2135,"mtime":1612030410895,"results":"19","hashOfConfig":"18"},{"size":809,"mtime":1616427758839,"results":"20","hashOfConfig":"18"},{"size":236,"mtime":1610985749252,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":1610290934044,"results":"22","hashOfConfig":"18"},{"size":166,"mtime":1611154749644,"results":"23","hashOfConfig":"18"},{"size":676,"mtime":1610904047608,"results":"24","hashOfConfig":"18"},{"size":4108,"mtime":1612030605808,"results":"25","hashOfConfig":"18"},{"size":2290,"mtime":1612030509576,"results":"26","hashOfConfig":"18"},{"size":2680,"mtime":1612030592200,"results":"27","hashOfConfig":"18"},{"size":276,"mtime":1611172026892,"results":"28","hashOfConfig":"18"},{"size":2764,"mtime":1612030453527,"results":"29","hashOfConfig":"18"},{"size":2939,"mtime":1611919777624,"results":"30","hashOfConfig":"18"},{"size":1951,"mtime":1611925437284,"results":"31","hashOfConfig":"18"},{"size":243,"mtime":1612030361984,"results":"32","hashOfConfig":"18"},{"size":887,"mtime":1612030430042,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ve6w59",{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/index.js",[],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/editor.js",["75","76","77","78","79","80","81"],"import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useContext,\n  useRef\n} from \"react\";\nimport { debounce } from \"lodash\";\nimport { updateUrlData, saveUrls, updateStemNotes } from \"../services/graphql\";\nimport { MainContext } from \"../contexts/MainProvider\";\nimport { decode } from \"../services/utils\";\n\nexport default function Editor({ saveNow, match }) {\n  const [stem, setStem] = useState({ notes: \"Mash It!!!\" });\n  const [text, setText] = useState(\"\");\n  const { initialState, setUrlData, getCurrentStem, setLoader } = useContext(\n    MainContext\n  );\n  const textAreaRef = useRef(\"\");\n\n  const saveWithDelay = useCallback(debounce(updateStem, 1000), [text]);\n  useEffect(() => {\n    if (initialState.urlData.id) {\n      saveWithDelay();\n    }\n    return saveWithDelay.cancel;\n  }, [text]);\n\n  function handleChange(e) {\n    setLoader(true);\n\n    textAreaRef.current.value = e.target.value;\n    setText(e.target.value);\n  }\n  function updateStem() {\n    updateStemNotes(initialState, textAreaRef.current.value, e => {\n      setLoader(false);\n      console.log(e);\n    });\n  }\n  function updateData() {\n    updateUrlData(initialState.urlData.id, textAreaRef.current.value, e => {\n      saveNow(e);\n    });\n  }\n\n  useEffect(() => {\n    if (initialState.currentStemId) {\n      const stem = getCurrentStem(initialState.currentStemId);\n      if (stem) {\n        console.log(\"Finding\");\n\n        setStem(stem);\n        textAreaRef.current.value = decode(stem.notes);\n      }\n    }\n  }, [initialState.currentStemId]);\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12 col-12\">\n          <div className=\"glass-panel\">\n            <div className=\"row\">\n              <div className=\"col-12 p-5\">\n                <textarea\n                  className=\"textarea\"\n                  onChange={e => handleChange(e)}\n                  ref={textAreaRef}\n                  rows={15}\n                ></textarea>\n              </div>\n              <div style={{ height: \"100px\" }}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",["82","83"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/App.js",["84"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Loader/loader.js",[],["85","86"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/reportWebVitals.js",[],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/config.js",["87"],"export const APILINK = {\n  baseUrl:\n    process.env.NODE_ENV == \"production\"\n      ? \"https://server.mashmush.com/graphql\"\n      : \"http://localhost:5000/graphql\"\n};\n",["88","89"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Main.js",["90"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Tree/Tree.js",["91","92","93","94","95","96","97","98"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/graphql/index.js",[],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/graphql/queries/index.js",[],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/http.js",[],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Stems/Stems.js",["99","100","101","102"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Sekeleton.js",["103","104","105","106","107","108","109","110"],"import React, { useState, useContext } from \"react\";\nimport Editor from \"./editor\";\nimport Tree from \"./Tree/Tree\";\nimport { MainContext } from \"../contexts/MainProvider\";\nimport * as CryptoJS from \"crypto-js\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { saveUrls } from \"../services/graphql\";\n\nexport default function Skeleton({ children, match }) {\n  let history = useHistory();\n  const { initialState, setUrlData } = useContext(MainContext);\n\n  React.useEffect(() => {\n    let pathname = match.params.id;\n\n    if (!pathname) {\n      let pass = [...crypto.getRandomValues(new Uint8Array(8))].map(\n        (x, i) => (\n          (i = ((x / 255) * 61) | 0),\n          String.fromCharCode(i + (i > 9 ? (i > 35 ? 61 : 55) : 48))\n        )\n      ).join``;\n      history.push(pass);\n    } else if (pathname.length > 16) {\n      pathname = pathname\n        .trim()\n        .replace(/([~!@#$%^&*()_+=`{}\\[\\]\\|\\\\:;'<>,.\\/? ])+/g, \"-\")\n        .replace(/^(-)+|(-)+$/g, \"\")\n        .slice(0, 15);\n      history.push(pathname);\n    } else {\n      registerUrl(pathname);\n    }\n  }, [match.params.id]);\n  function registerUrl(uri) {\n    saveUrls(uri, e => {\n      // textAreaRef.current.value = e.text;\n      setUrlData(e.user);\n    });\n  }\n  function clickMe() {\n    console.log(initialState);\n    let getTreeIndex = initialState.urlData.trees.findIndex(\n      e => e.id == initialState.selectedTree.id\n    );\n    let getStemIndex = initialState.selectedTree.stems.findIndex(\n      e => e.id == initialState.currentStemId\n    );\n    let merger = `${getTreeIndex}|${getStemIndex}|${initialState.urlData.url}`;\n    var encryptedUrl = CryptoJS.AES.encrypt(merger, \"123456\")\n      .toString()\n      .replace(/\\\\|\\//g, \"ddos\");\n    // var encryptedUrlSHA256 = CryptoJS.AES.encrypt(merger, \"123456\").toString();\n    navigator.clipboard.writeText(\n      window.location.origin + \"/read/\" + encryptedUrl\n    );\n    toast(\"Link Copied!\");\n  }\n  return (\n    <div>\n      <div className=\"wrapper d-flex align-items-stretch\">\n        <nav id=\"sidebar\" className=\"glass-panel\">\n          <Tree />\n        </nav>\n        <div id=\"content\" className=\"p-4 p-md-5 pt-5 w-100\">\n          <div className=\"mb-4\">\n            <h2>\n              {initialState.selectedTree\n                ? initialState.selectedTree.title\n                : \"Your tree name here\"}\n            </h2>\n            <div>\n              {initialState.currentStemId ? (\n                <button\n                  className=\"btn btn-info btn-sm\"\n                  onClick={() => clickMe()}\n                >\n                  Get Shareble Link\n                </button>\n              ) : null}\n\n              <ToastContainer />\n            </div>\n          </div>\n          {initialState.currentStemId ? <Editor match={match} /> : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n",["111","112"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/contexts/MainProvider.js",["113","114","115","116"],"import React, { createContext, useState, useEffect } from \"react\";\n\nexport const MainContext = createContext();\n\nexport default function MainProvider({ children }) {\n  const [initialState, setInitialState] = useState({\n    urlData: { id: 0, trees: [] },\n    loader: false\n  });\n  function setSelectedTree(tree) {\n    let state = {\n      ...initialState,\n      selectedTree: tree,\n      currentStemId:\n        tree.stems.length > 0 ? tree.stems[tree.stems.length - 1].id : 0\n    };\n    setInitialState(state);\n  }\n  function setUrlData(urlInfo) {\n    let state = { ...initialState, urlData: urlInfo };\n    setInitialState(state);\n  }\n  function setCurrentStemId(id) {\n    let state = { ...initialState, currentStemId: id };\n    setInitialState(state);\n  }\n  function setTreeData(tree) {\n    let state = {\n      ...initialState,\n      urlData: { ...initialState.urlData, trees: tree }\n    };\n    setInitialState(state);\n  }\n  function updateSelectedTree(tree) {\n    let treeClone = initialState.urlData.trees.map(item => {\n      if (item.id == tree.id) {\n        return (item = tree);\n      } else {\n        return item;\n      }\n    });\n    let state = {\n      ...initialState,\n      selectedTree: tree,\n      currentStemId:\n        tree.stems.length > 0 ? tree.stems[tree.stems.length - 1].id : 0,\n      urlData: { ...initialState.urlData, trees: treeClone }\n    };\n    setInitialState(state);\n  }\n  function setLoader(bool) {\n    let state = { ...initialState, loader: bool };\n    setInitialState(state);\n  }\n  function getCurrentStem(id) {\n    if (initialState.selectedTree && initialState.selectedTree.stems) {\n      return initialState.selectedTree.stems.find(e => e.id == id);\n    }\n  }\n  const exportedData = {\n    initialState,\n    setUrlData,\n    setCurrentStemId,\n    getCurrentStem,\n    setTreeData,\n    setLoader,\n    updateSelectedTree\n  };\n  return (\n    <MainContext.Provider value={exportedData}>{children}</MainContext.Provider>\n  );\n}\n",["117","118"],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/services/utils.js",[],"/Users/alimemon/Desktop/shrib-clone/mashmush-react/src/components/Read.js",["119"],{"ruleId":"120","severity":1,"message":"121","line":9,"column":25,"nodeType":"122","messageId":"123","endLine":9,"endColumn":33},{"ruleId":"120","severity":1,"message":"124","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":16,"column":25,"nodeType":"122","messageId":"123","endLine":16,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":21,"column":25,"nodeType":"122","endLine":21,"endColumn":36},{"ruleId":"126","severity":1,"message":"128","line":27,"column":6,"nodeType":"129","endLine":27,"endColumn":12,"suggestions":"130"},{"ruleId":"120","severity":1,"message":"131","line":41,"column":12,"nodeType":"122","messageId":"123","endLine":41,"endColumn":22},{"ruleId":"126","severity":1,"message":"132","line":57,"column":6,"nodeType":"129","endLine":57,"endColumn":34,"suggestions":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"120","severity":1,"message":"138","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"134","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":3,"column":26,"nodeType":"143","messageId":"144","endLine":3,"endColumn":28},{"ruleId":"134","replacedBy":"145"},{"ruleId":"136","replacedBy":"146"},{"ruleId":"120","severity":1,"message":"147","line":5,"column":22,"nodeType":"122","messageId":"123","endLine":5,"endColumn":35},{"ruleId":"120","severity":1,"message":"148","line":12,"column":3,"nodeType":"122","messageId":"123","endLine":12,"endColumn":16},{"ruleId":"120","severity":1,"message":"149","line":23,"column":10,"nodeType":"122","messageId":"123","endLine":23,"endColumn":14},{"ruleId":"120","severity":1,"message":"150","line":50,"column":12,"nodeType":"122","messageId":"123","endLine":50,"endColumn":22},{"ruleId":"120","severity":1,"message":"151","line":54,"column":12,"nodeType":"122","messageId":"123","endLine":54,"endColumn":28},{"ruleId":"141","severity":1,"message":"152","line":58,"column":28,"nodeType":"143","messageId":"144","endLine":58,"endColumn":30},{"ruleId":"141","severity":1,"message":"152","line":77,"column":27,"nodeType":"143","messageId":"144","endLine":77,"endColumn":29},{"ruleId":"120","severity":1,"message":"153","line":96,"column":17,"nodeType":"122","messageId":"123","endLine":96,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":100,"column":17,"nodeType":"156","endLine":103,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":14,"column":45,"nodeType":"143","messageId":"144","endLine":14,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":23,"column":45,"nodeType":"143","messageId":"144","endLine":23,"endColumn":47},{"ruleId":"120","severity":1,"message":"153","line":37,"column":19,"nodeType":"122","messageId":"123","endLine":37,"endColumn":29},{"ruleId":"154","severity":1,"message":"155","line":40,"column":19,"nodeType":"156","endLine":43,"endColumn":20},{"ruleId":"120","severity":1,"message":"157","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":21,"column":37,"nodeType":"160","messageId":"161","endLine":21,"endColumn":38},{"ruleId":"162","severity":1,"message":"163","line":29,"column":38,"nodeType":"164","messageId":"165","endLine":29,"endColumn":39,"suggestions":"166"},{"ruleId":"162","severity":1,"message":"167","line":29,"column":42,"nodeType":"164","messageId":"165","endLine":29,"endColumn":43,"suggestions":"168"},{"ruleId":"162","severity":1,"message":"169","line":29,"column":53,"nodeType":"164","messageId":"165","endLine":29,"endColumn":54,"suggestions":"170"},{"ruleId":"126","severity":1,"message":"171","line":36,"column":6,"nodeType":"129","endLine":36,"endColumn":23,"suggestions":"172"},{"ruleId":"141","severity":1,"message":"142","line":46,"column":17,"nodeType":"143","messageId":"144","endLine":46,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":49,"column":17,"nodeType":"143","messageId":"144","endLine":49,"endColumn":19},{"ruleId":"134","replacedBy":"173"},{"ruleId":"136","replacedBy":"174"},{"ruleId":"120","severity":1,"message":"175","line":1,"column":42,"nodeType":"122","messageId":"123","endLine":1,"endColumn":51},{"ruleId":"120","severity":1,"message":"176","line":10,"column":12,"nodeType":"122","messageId":"123","endLine":10,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":36,"column":19,"nodeType":"143","messageId":"144","endLine":36,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":57,"column":61,"nodeType":"143","messageId":"144","endLine":57,"endColumn":63},{"ruleId":"134","replacedBy":"177"},{"ruleId":"136","replacedBy":"178"},{"ruleId":"126","severity":1,"message":"179","line":25,"column":6,"nodeType":"129","endLine":25,"endColumn":8,"suggestions":"180"},"no-unused-vars","'saveUrls' is defined but never used.","Identifier","unusedVar","'stem' is assigned a value but never used.","'setUrlData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has missing dependencies: 'initialState.urlData.id' and 'saveWithDelay'. Either include them or remove the dependency array.","ArrayExpression",["181"],"'updateData' is defined but never used.","React Hook useEffect has a missing dependency: 'getCurrentStem'. Either include it or remove the dependency array.",["182"],"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'Editor' is defined but never used.",["183"],["184"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["183"],["184"],"'setShowLoader' is assigned a value but never used.","'addStemInTree' is defined but never used.","'edit' is assigned a value but never used.","'handleEdit' is defined but never used.","'checkIfNameIsNew' is defined but never used.","Expected '!==' and instead saw '!='.","'isRequired' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["185","186"],"Unnecessary escape character: \\|.",["187","188"],"Unnecessary escape character: \\/.",["189","190"],"React Hook React.useEffect has missing dependencies: 'history' and 'registerUrl'. Either include them or remove the dependency array.",["191"],["183"],["184"],"'useEffect' is defined but never used.","'setSelectedTree' is defined but never used.",["183"],["184"],"React Hook useEffect has missing dependencies: 'match.params.id' and 'setUrlData'. Either include them or remove the dependency array.",["192"],{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"no-global-assign","no-unsafe-negation",{"messageId":"197","fix":"198","desc":"199"},{"messageId":"200","fix":"201","desc":"202"},{"messageId":"197","fix":"203","desc":"199"},{"messageId":"200","fix":"204","desc":"202"},{"messageId":"197","fix":"205","desc":"199"},{"messageId":"200","fix":"206","desc":"202"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [initialState.urlData.id, saveWithDelay, text]",{"range":"211","text":"212"},"Update the dependencies array to be: [getCurrentStem, initialState.currentStemId]",{"range":"213","text":"214"},"removeEscape",{"range":"215","text":"216"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"217","text":"218"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"219","text":"216"},{"range":"220","text":"218"},{"range":"221","text":"216"},{"range":"222","text":"218"},"Update the dependencies array to be: [history, match.params.id, registerUrl]",{"range":"223","text":"224"},"Update the dependencies array to be: [match.params.id, setUrlData]",{"range":"225","text":"226"},[794,800],"[initialState.urlData.id, saveWithDelay, text]",[1492,1520],"[getCurrentStem, initialState.currentStemId]",[1012,1013],"",[1012,1012],"\\",[1016,1017],[1016,1016],[1027,1028],[1027,1027],[1186,1203],"[history, match.params.id, registerUrl]",[843,845],"[match.params.id, setUrlData]"]